- title 'Games'[]

- if @games.length > 0
  - if @filter
    %p.filter
      - if @filter.length > 1
        = 'Filter by <b>{first}</b> and <b>{second}</b>'[:filter_by_two, h(@filter[0].display_name), h(@filter[1].display_name)]
      - else
        = 'Filter by <b>{first}</b>'[:filter_by_one, h(@filter[0].display_name)]

      = link_to 'Clear filter', games_path, :class => 'clear'

  #games
    .list
      %table
        %tr
          %th= 'Team one'[]
          %th.score= 'Score'[]
          %th= 'Team two'[]
          %th &nbsp;
          %th= 'Created'[]
          %th &nbsp;

        - @games.each do |game|
          %tr{ :class => cycle('odd', 'even') }
            = render :partial => 'game_columns', :locals => { :game => game }

            %td
              = game.played_at.to_s :short
              = ' by {user}'[:by_user, game.creator.login] if game.creator

            %td= link_to 'Delete', game_path(game), :method => :delete, :confirm => 'Delete game. Are you sure?'[] if logged_in?

  .pagination= will_paginate @games

  .bottom_space
    = link_to 'RSS feed (all games)'[] + ' ' + image_tag('rss.gif'), formatted_games_url(:rss), :class => 'rss'
    - unless params[:filter].blank?
      = link_to 'RSS feed (filtered)'[] + ' ' + image_tag('rss.gif'), formatted_games_url(:rss, :filter => params[:filter]), :class => 'rss'
        
- content_for :sidebar do
  - if logged_in?
    = render :partial => 'games/form'
  - else
    = 'Login to add a game.'[]

- content_for :head do
  = auto_discovery_link_tag :atom, formatted_games_url(:atom), :title => 'All games'[]
  = auto_discovery_link_tag :rss, formatted_games_url(:rss), :title => 'All games'[]

  - unless params[:filter].blank?
    = auto_discovery_link_tag :atom, formatted_games_url(:atom, :filter => params[:filter]), :title => 'Filtered'[]
    = auto_discovery_link_tag :rss, formatted_games_url(:rss, :filter => params[:filter]), :title => 'Filtered'[]